---
meta:
  size: default
  instances: 3
  default:
    azs: [z1,z2]
  username: (( vault $CREDENTIALS "/rabbitmq/system:username" ))
  password: (( vault $CREDENTIALS "/rabbitmq/system:password" ))
  username-management: (( vault $CREDENTIALS "/rabbitmq/management:username" ))
  password-management: (( vault $CREDENTIALS "/rabbitmq/management:password" ))
  environment: <%= p('environment') %>
  bosh_env: <%= p('bosh_env') %>

  cf:
    exodus_path: <%= p('cf.exodus_path') %>
    deployment_name: <%= p('cf.deployment_name') %>
    system_domain: <%= p('cf.system_domain') %>
    api_url:    <%= p('cf.api_url') %>
    username:   <%= p('cf.username') %>
    password:   <%= p('cf.password') %>

<% if p("rabbitmq.route_registrar.enabled") -%>
params:
  cf:
    core_network: <%= p("cf.core_network") %>
<% end -%>

variables:
- name: rabbitmq_cluster_crt
  type: certificate
  options:
    ca: (( concat "/" meta.bosh_env "-bosh/" meta.environment "-blacksmith/blacksmith_services_ca" ))
    common_name: (( concat meta.environment "-rabbitmq-cluster.bosh" ))
  consumes:
    alternative_name: 
      from: rabbitmq-san 
      properties: { wildcard: true }

features:
  use_dns_addresses: true

releases:
  - { name: rabbitmq-forge, version: latest }
<% if p("rabbitmq.route_registrar.enabled") %>
  - { name: routing, version: latest }
  - { name: bosh-dns-aliases, version: latest}
<% end -%>

  - name: bpm
    version: 1.1.12
    url: https://bosh.io/d/github.com/cloudfoundry/bpm-release?v=1.1.12
    sha1: 502e9446fa34accaf122ad2b28b6ffa543d5bbca

stemcells:
- alias: default
  os: ubuntu-bionic
  version: latest

update:
  canaries: 1
  max_in_flight: 10
  canary_watch_time: 1000-30000
  update_watch_time: 1000-30000

instance_groups:
  - name: node
    instances: (( grab meta.instances ))
    azs: (( grab meta.azs || meta.default.azs ))
    networks: [name: (( grab meta.net || 'rabbitmq-service' ))]
    stemcell: default

    vm_type: (( grab meta.size ))

    jobs:
      - name:    rabbitmq
        release: rabbitmq-forge
        properties:
          rabbitmq:
            vhost: (( grab meta.params.instance_id || "/" ))
            network: (( grab meta.net || "rabbitmq-service" ))
            admin:
              user: (( grab meta.username ))
              pass: (( grab meta.password ))
            management:
              user: (( grab meta.username-management ))
              pass: (( grab meta.password-management ))
            tls:
              enabled: (( grab meta.rabbitmq.tls.enabled || false ))
              dual-mode: (( grab meta.rabbitmq.tls.dual-mode || false ))
              ca: (( file "/var/vcap/jobs/blacksmith/config/tls/blacksmith_services_ca" ))
              crt: ((rabbitmq_cluster_crt.certificate))
              key: ((rabbitmq_cluster_crt.private_key))

        provides:
          rabbitmq-servers:
            as: rabbitmq-servers
            ip_addresses: false
          rabbitmq-san:
            as: rabbitmq-san
            ip_addresses: false
          rabbitmq-alias-domain:
            aliases:
            - domain: "_.rabbitmq_cluster.bosh"
              placeholder_type: uuid
        consumes:
          rabbitmq-servers:
            from: rabbitmq-servers
            ip_addresses: false
        custom_provider_definitions:
        - name: rabbitmq-san  
          type: address
        - name: rabbitmq-alias-domain
          type: placeholder

      - name:    bpm
        release: bpm

<% if p("rabbitmq.route_registrar.enabled") -%>
      - name: route_registrar
        release: routing
        properties:
          nats:
            tls:
              enabled: true
              client_cert: "((/<%= p("bosh.deployment_name") %>-bosh/<%= p("cf.deployment_name") %>/nats_client_cert.certificate))"
              client_key: "((/<%= p("bosh.deployment_name") %>-bosh/<%= p("cf.deployment_name") %>/nats_client_cert.private_key))"
          route_registrar:
            logging_level: "debug"
            routes:
            - name: (( grab name ))
              uris:
              - (( concat name ".<%= p("cf.system_domain") %>" ))
              registration_interval: 10s
<% if p("rabbitmq.route_registrar.tls.enabled") == "true" %>
              tls_port: 15671
              server_cert_domain_san: (( concat name ".<%= p("cf.system_domain") %>" ))
<% else %>
              port: 15672
<% end %>

        consumes:
          nats:
            from: nats
            deployment: <%= p("cf.deployment_name") %>
          nats-tls:
            from: nats-tls
            deployment: <%= p("cf.deployment_name") %>

addons:
- name: bosh-dns-aliases
  include:
    jobs:
    - name: route_registrar
      release: routing
  jobs:
  - name: bosh-dns-aliases
    release: bosh-dns-aliases
    properties:
      aliases:
      - domain: nats.service.cf.internal
        targets:
        - deployment: (( grab meta.cf.deployment_name ))
          domain: bosh
          instance_group: nats
          network: (( grab params.cf.core_network ))
          query: '*'
      - domain: _.nats.service.cf.internal
        targets:
        - deployment: (( grab meta.cf.deployment_name ))
          domain: bosh
          instance_group: nats
          network: (( grab params.cf.core_network ))
          query: _
<% end %>

