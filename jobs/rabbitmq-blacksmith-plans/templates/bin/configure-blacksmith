#!/bin/bash
set -eu

PLANSRC=/var/vcap/jobs/rabbitmq-blacksmith-plans/plans
SVCROOT=/var/vcap/data/blacksmith/rabbitmq-forge/services

rm    -rf $SVCROOT
mkdir -p  $SVCROOT

# Copy the service definition stub for Blacksmith
cp $PLANSRC/service.yml $SVCROOT

<% p("plans").each do |id, plan| %>
################################################################################
# RabbitMQ Plan <% plan["name"].tr("_","-") %>/<%= id %>
################################################################################
PLANROOT="$SVCROOT/<%= id %>"
PLANTYPE="<%= plan["type"] || 'standalone' %>"

mkdir -p $PLANROOT
cat > $PLANROOT/plan.yml <<EOF
---
id: <%= id %>
name: <%= plan["name"].tr("_","-") || id %> # NOTE: DNS Requires - not _
limit: <%= plan["limit"] || 0 %>
description: |+
  <%= plan["description"] || 'no description provided' %>
EOF

for file in init credentials.yml manifest.yml; do
  cp $PLANSRC/$PLANTYPE/$file $PLANROOT/
done
chmod 0755 $PLANROOT/init

cat > $PLANROOT/params.yml <<EOF
---
# auto-generated by rabbitmq-blacksmith-plans
# for plan-id <%= id %> (<%= plan["name"].tr("_","-") || id %>)

meta:
  size: <%= plan["vm_type"] || "default" %>
  net:  <%= plan["network"] || "rabbitmq-service" %>

<% if plan["instances"] && plan["instances"] > 1 -%>
  instances: <%= plan["instances"] %>
<% end %>

<% if plan["azs"] -%>
  azs: <%= plan["azs"] %>
<% end %>

<% if p('rabbitmq.tls.enabled') -%> 
  rabbitmq:
    tls:
      enabled: true
      ca: (( file "/var/vcap/jobs/rabbitmq-blacksmith-plans/tls/rabbitmq.ca" ))
      key: (( file "/var/vcap/jobs/rabbitmq-blacksmith-plans/tls/rabbitmq.key" ))
      crt: (( file "/var/vcap/jobs/rabbitmq-blacksmith-plans/tls/rabbitmq.crt" ))
<% end %>
<% if p('rabbitmq.tls.dual-mode') -%> 
      dual-mode: true
<% end %>
EOF
<% end -%>
